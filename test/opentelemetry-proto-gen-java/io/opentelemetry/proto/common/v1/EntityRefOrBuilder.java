// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/common/v1/common.proto

package io.opentelemetry.proto.common.v1;

public interface EntityRefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opentelemetry.proto.common.v1.EntityRef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The Schema URL, if known. This is the identifier of the Schema that the entity data
   * is recorded in. To learn more about Schema URL see
   * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
   * This schema_url applies to the data in this message and to the Resource attributes
   * referenced by id_keys and description_keys.
   * TODO: discuss if we are happy with this somewhat complicated definition of what
   * the schema_url applies to.
   * This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
   * </pre>
   *
   * <code>string schema_url = 1;</code>
   * @return The schemaUrl.
   */
  java.lang.String getSchemaUrl();
  /**
   * <pre>
   * The Schema URL, if known. This is the identifier of the Schema that the entity data
   * is recorded in. To learn more about Schema URL see
   * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
   * This schema_url applies to the data in this message and to the Resource attributes
   * referenced by id_keys and description_keys.
   * TODO: discuss if we are happy with this somewhat complicated definition of what
   * the schema_url applies to.
   * This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
   * </pre>
   *
   * <code>string schema_url = 1;</code>
   * @return The bytes for schemaUrl.
   */
  com.google.protobuf.ByteString
      getSchemaUrlBytes();

  /**
   * <pre>
   * Defines the type of the entity. MUST not change during the lifetime of the entity.
   * For example: "service" or "host". This field is required and MUST not be empty
   * for valid entities.
   * </pre>
   *
   * <code>string type = 2;</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * Defines the type of the entity. MUST not change during the lifetime of the entity.
   * For example: "service" or "host". This field is required and MUST not be empty
   * for valid entities.
   * </pre>
   *
   * <code>string type = 2;</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * Attribute Keys that identify the entity.
   * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string id_keys = 3;</code>
   * @return A list containing the idKeys.
   */
  java.util.List<java.lang.String>
      getIdKeysList();
  /**
   * <pre>
   * Attribute Keys that identify the entity.
   * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string id_keys = 3;</code>
   * @return The count of idKeys.
   */
  int getIdKeysCount();
  /**
   * <pre>
   * Attribute Keys that identify the entity.
   * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string id_keys = 3;</code>
   * @param index The index of the element to return.
   * @return The idKeys at the given index.
   */
  java.lang.String getIdKeys(int index);
  /**
   * <pre>
   * Attribute Keys that identify the entity.
   * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string id_keys = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the idKeys at the given index.
   */
  com.google.protobuf.ByteString
      getIdKeysBytes(int index);

  /**
   * <pre>
   * Descriptive (non-identifying) attribute keys of the entity.
   * MAY change over the lifetime of the entity. MAY be empty.
   * These attribute keys are not part of entity's identity.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string description_keys = 4;</code>
   * @return A list containing the descriptionKeys.
   */
  java.util.List<java.lang.String>
      getDescriptionKeysList();
  /**
   * <pre>
   * Descriptive (non-identifying) attribute keys of the entity.
   * MAY change over the lifetime of the entity. MAY be empty.
   * These attribute keys are not part of entity's identity.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string description_keys = 4;</code>
   * @return The count of descriptionKeys.
   */
  int getDescriptionKeysCount();
  /**
   * <pre>
   * Descriptive (non-identifying) attribute keys of the entity.
   * MAY change over the lifetime of the entity. MAY be empty.
   * These attribute keys are not part of entity's identity.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string description_keys = 4;</code>
   * @param index The index of the element to return.
   * @return The descriptionKeys at the given index.
   */
  java.lang.String getDescriptionKeys(int index);
  /**
   * <pre>
   * Descriptive (non-identifying) attribute keys of the entity.
   * MAY change over the lifetime of the entity. MAY be empty.
   * These attribute keys are not part of entity's identity.
   * These keys MUST exist in the containing {message}.attributes.
   * </pre>
   *
   * <code>repeated string description_keys = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the descriptionKeys at the given index.
   */
  com.google.protobuf.ByteString
      getDescriptionKeysBytes(int index);
}

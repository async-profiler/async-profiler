// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/profiles/v1development/profiles.proto

package io.opentelemetry.proto.profiles.v1development;

/**
 * <pre>
 * Each Sample records values encountered in some program
 * context. The program context is typically a stack trace, perhaps
 * augmented with auxiliary information like the thread-id, some
 * indicator of a higher level request being handled etc.
 * </pre>
 *
 * Protobuf type {@code opentelemetry.proto.profiles.v1development.Sample}
 */
public final class Sample extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opentelemetry.proto.profiles.v1development.Sample)
    SampleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Sample.newBuilder() to construct.
  private Sample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Sample() {
    value_ = emptyLongList();
    attributeIndices_ = emptyIntList();
    timestampsUnixNano_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Sample();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Sample(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            locationsStartIndex_ = input.readInt32();
            break;
          }
          case 16: {

            locationsLength_ = input.readInt32();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              value_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            value_.addLong(input.readInt64());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              value_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              value_.addLong(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              attributeIndices_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            attributeIndices_.addInt(input.readInt32());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              attributeIndices_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              attributeIndices_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 40: {
            bitField0_ |= 0x00000001;
            linkIndex_ = input.readInt32();
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              timestampsUnixNano_ = newLongList();
              mutable_bitField0_ |= 0x00000008;
            }
            timestampsUnixNano_.addLong(input.readUInt64());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
              timestampsUnixNano_ = newLongList();
              mutable_bitField0_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              timestampsUnixNano_.addLong(input.readUInt64());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        value_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        attributeIndices_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        timestampsUnixNano_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Sample_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Sample_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opentelemetry.proto.profiles.v1development.Sample.class, io.opentelemetry.proto.profiles.v1development.Sample.Builder.class);
  }

  private int bitField0_;
  public static final int LOCATIONS_START_INDEX_FIELD_NUMBER = 1;
  private int locationsStartIndex_;
  /**
   * <pre>
   * locations_start_index along with locations_length refers to to a slice of locations in Profile.location_indices.
   * </pre>
   *
   * <code>int32 locations_start_index = 1;</code>
   * @return The locationsStartIndex.
   */
  @java.lang.Override
  public int getLocationsStartIndex() {
    return locationsStartIndex_;
  }

  public static final int LOCATIONS_LENGTH_FIELD_NUMBER = 2;
  private int locationsLength_;
  /**
   * <pre>
   * locations_length along with locations_start_index refers to a slice of locations in Profile.location_indices.
   * Supersedes location_index.
   * </pre>
   *
   * <code>int32 locations_length = 2;</code>
   * @return The locationsLength.
   */
  @java.lang.Override
  public int getLocationsLength() {
    return locationsLength_;
  }

  public static final int VALUE_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.LongList value_;
  /**
   * <pre>
   * The type and unit of each value is defined by the corresponding
   * entry in Profile.sample_type. All samples must have the same
   * number of values, the same as the length of Profile.sample_type.
   * When aggregating multiple samples into a single sample, the
   * result has a list of values that is the element-wise sum of the
   * lists of the originals.
   * </pre>
   *
   * <code>repeated int64 value = 3;</code>
   * @return A list containing the value.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getValueList() {
    return value_;
  }
  /**
   * <pre>
   * The type and unit of each value is defined by the corresponding
   * entry in Profile.sample_type. All samples must have the same
   * number of values, the same as the length of Profile.sample_type.
   * When aggregating multiple samples into a single sample, the
   * result has a list of values that is the element-wise sum of the
   * lists of the originals.
   * </pre>
   *
   * <code>repeated int64 value = 3;</code>
   * @return The count of value.
   */
  public int getValueCount() {
    return value_.size();
  }
  /**
   * <pre>
   * The type and unit of each value is defined by the corresponding
   * entry in Profile.sample_type. All samples must have the same
   * number of values, the same as the length of Profile.sample_type.
   * When aggregating multiple samples into a single sample, the
   * result has a list of values that is the element-wise sum of the
   * lists of the originals.
   * </pre>
   *
   * <code>repeated int64 value = 3;</code>
   * @param index The index of the element to return.
   * @return The value at the given index.
   */
  public long getValue(int index) {
    return value_.getLong(index);
  }
  private int valueMemoizedSerializedSize = -1;

  public static final int ATTRIBUTE_INDICES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.IntList attributeIndices_;
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 4;</code>
   * @return A list containing the attributeIndices.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getAttributeIndicesList() {
    return attributeIndices_;
  }
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 4;</code>
   * @return The count of attributeIndices.
   */
  public int getAttributeIndicesCount() {
    return attributeIndices_.size();
  }
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 4;</code>
   * @param index The index of the element to return.
   * @return The attributeIndices at the given index.
   */
  public int getAttributeIndices(int index) {
    return attributeIndices_.getInt(index);
  }
  private int attributeIndicesMemoizedSerializedSize = -1;

  public static final int LINK_INDEX_FIELD_NUMBER = 5;
  private int linkIndex_;
  /**
   * <pre>
   * Reference to link in ProfilesDictionary.link_table. [optional]
   * </pre>
   *
   * <code>optional int32 link_index = 5;</code>
   * @return Whether the linkIndex field is set.
   */
  @java.lang.Override
  public boolean hasLinkIndex() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Reference to link in ProfilesDictionary.link_table. [optional]
   * </pre>
   *
   * <code>optional int32 link_index = 5;</code>
   * @return The linkIndex.
   */
  @java.lang.Override
  public int getLinkIndex() {
    return linkIndex_;
  }

  public static final int TIMESTAMPS_UNIX_NANO_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.LongList timestampsUnixNano_;
  /**
   * <pre>
   * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
   * to fall within the Profile's time range. [optional]
   * </pre>
   *
   * <code>repeated uint64 timestamps_unix_nano = 6;</code>
   * @return A list containing the timestampsUnixNano.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getTimestampsUnixNanoList() {
    return timestampsUnixNano_;
  }
  /**
   * <pre>
   * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
   * to fall within the Profile's time range. [optional]
   * </pre>
   *
   * <code>repeated uint64 timestamps_unix_nano = 6;</code>
   * @return The count of timestampsUnixNano.
   */
  public int getTimestampsUnixNanoCount() {
    return timestampsUnixNano_.size();
  }
  /**
   * <pre>
   * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
   * to fall within the Profile's time range. [optional]
   * </pre>
   *
   * <code>repeated uint64 timestamps_unix_nano = 6;</code>
   * @param index The index of the element to return.
   * @return The timestampsUnixNano at the given index.
   */
  public long getTimestampsUnixNano(int index) {
    return timestampsUnixNano_.getLong(index);
  }
  private int timestampsUnixNanoMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (locationsStartIndex_ != 0) {
      output.writeInt32(1, locationsStartIndex_);
    }
    if (locationsLength_ != 0) {
      output.writeInt32(2, locationsLength_);
    }
    if (getValueList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(valueMemoizedSerializedSize);
    }
    for (int i = 0; i < value_.size(); i++) {
      output.writeInt64NoTag(value_.getLong(i));
    }
    if (getAttributeIndicesList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(attributeIndicesMemoizedSerializedSize);
    }
    for (int i = 0; i < attributeIndices_.size(); i++) {
      output.writeInt32NoTag(attributeIndices_.getInt(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(5, linkIndex_);
    }
    if (getTimestampsUnixNanoList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(timestampsUnixNanoMemoizedSerializedSize);
    }
    for (int i = 0; i < timestampsUnixNano_.size(); i++) {
      output.writeUInt64NoTag(timestampsUnixNano_.getLong(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (locationsStartIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, locationsStartIndex_);
    }
    if (locationsLength_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, locationsLength_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < value_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(value_.getLong(i));
      }
      size += dataSize;
      if (!getValueList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      valueMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < attributeIndices_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(attributeIndices_.getInt(i));
      }
      size += dataSize;
      if (!getAttributeIndicesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      attributeIndicesMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, linkIndex_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < timestampsUnixNano_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt64SizeNoTag(timestampsUnixNano_.getLong(i));
      }
      size += dataSize;
      if (!getTimestampsUnixNanoList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      timestampsUnixNanoMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opentelemetry.proto.profiles.v1development.Sample)) {
      return super.equals(obj);
    }
    io.opentelemetry.proto.profiles.v1development.Sample other = (io.opentelemetry.proto.profiles.v1development.Sample) obj;

    if (getLocationsStartIndex()
        != other.getLocationsStartIndex()) return false;
    if (getLocationsLength()
        != other.getLocationsLength()) return false;
    if (!getValueList()
        .equals(other.getValueList())) return false;
    if (!getAttributeIndicesList()
        .equals(other.getAttributeIndicesList())) return false;
    if (hasLinkIndex() != other.hasLinkIndex()) return false;
    if (hasLinkIndex()) {
      if (getLinkIndex()
          != other.getLinkIndex()) return false;
    }
    if (!getTimestampsUnixNanoList()
        .equals(other.getTimestampsUnixNanoList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LOCATIONS_START_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getLocationsStartIndex();
    hash = (37 * hash) + LOCATIONS_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + getLocationsLength();
    if (getValueCount() > 0) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValueList().hashCode();
    }
    if (getAttributeIndicesCount() > 0) {
      hash = (37 * hash) + ATTRIBUTE_INDICES_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeIndicesList().hashCode();
    }
    if (hasLinkIndex()) {
      hash = (37 * hash) + LINK_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getLinkIndex();
    }
    if (getTimestampsUnixNanoCount() > 0) {
      hash = (37 * hash) + TIMESTAMPS_UNIX_NANO_FIELD_NUMBER;
      hash = (53 * hash) + getTimestampsUnixNanoList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.profiles.v1development.Sample parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opentelemetry.proto.profiles.v1development.Sample prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Each Sample records values encountered in some program
   * context. The program context is typically a stack trace, perhaps
   * augmented with auxiliary information like the thread-id, some
   * indicator of a higher level request being handled etc.
   * </pre>
   *
   * Protobuf type {@code opentelemetry.proto.profiles.v1development.Sample}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opentelemetry.proto.profiles.v1development.Sample)
      io.opentelemetry.proto.profiles.v1development.SampleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Sample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Sample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opentelemetry.proto.profiles.v1development.Sample.class, io.opentelemetry.proto.profiles.v1development.Sample.Builder.class);
    }

    // Construct using io.opentelemetry.proto.profiles.v1development.Sample.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      locationsStartIndex_ = 0;

      locationsLength_ = 0;

      value_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      attributeIndices_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      linkIndex_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      timestampsUnixNano_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Sample_descriptor;
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Sample getDefaultInstanceForType() {
      return io.opentelemetry.proto.profiles.v1development.Sample.getDefaultInstance();
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Sample build() {
      io.opentelemetry.proto.profiles.v1development.Sample result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Sample buildPartial() {
      io.opentelemetry.proto.profiles.v1development.Sample result = new io.opentelemetry.proto.profiles.v1development.Sample(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.locationsStartIndex_ = locationsStartIndex_;
      result.locationsLength_ = locationsLength_;
      if (((bitField0_ & 0x00000001) != 0)) {
        value_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.value_ = value_;
      if (((bitField0_ & 0x00000002) != 0)) {
        attributeIndices_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.attributeIndices_ = attributeIndices_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.linkIndex_ = linkIndex_;
        to_bitField0_ |= 0x00000001;
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        timestampsUnixNano_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.timestampsUnixNano_ = timestampsUnixNano_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opentelemetry.proto.profiles.v1development.Sample) {
        return mergeFrom((io.opentelemetry.proto.profiles.v1development.Sample)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opentelemetry.proto.profiles.v1development.Sample other) {
      if (other == io.opentelemetry.proto.profiles.v1development.Sample.getDefaultInstance()) return this;
      if (other.getLocationsStartIndex() != 0) {
        setLocationsStartIndex(other.getLocationsStartIndex());
      }
      if (other.getLocationsLength() != 0) {
        setLocationsLength(other.getLocationsLength());
      }
      if (!other.value_.isEmpty()) {
        if (value_.isEmpty()) {
          value_ = other.value_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureValueIsMutable();
          value_.addAll(other.value_);
        }
        onChanged();
      }
      if (!other.attributeIndices_.isEmpty()) {
        if (attributeIndices_.isEmpty()) {
          attributeIndices_ = other.attributeIndices_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureAttributeIndicesIsMutable();
          attributeIndices_.addAll(other.attributeIndices_);
        }
        onChanged();
      }
      if (other.hasLinkIndex()) {
        setLinkIndex(other.getLinkIndex());
      }
      if (!other.timestampsUnixNano_.isEmpty()) {
        if (timestampsUnixNano_.isEmpty()) {
          timestampsUnixNano_ = other.timestampsUnixNano_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureTimestampsUnixNanoIsMutable();
          timestampsUnixNano_.addAll(other.timestampsUnixNano_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opentelemetry.proto.profiles.v1development.Sample parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opentelemetry.proto.profiles.v1development.Sample) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int locationsStartIndex_ ;
    /**
     * <pre>
     * locations_start_index along with locations_length refers to to a slice of locations in Profile.location_indices.
     * </pre>
     *
     * <code>int32 locations_start_index = 1;</code>
     * @return The locationsStartIndex.
     */
    @java.lang.Override
    public int getLocationsStartIndex() {
      return locationsStartIndex_;
    }
    /**
     * <pre>
     * locations_start_index along with locations_length refers to to a slice of locations in Profile.location_indices.
     * </pre>
     *
     * <code>int32 locations_start_index = 1;</code>
     * @param value The locationsStartIndex to set.
     * @return This builder for chaining.
     */
    public Builder setLocationsStartIndex(int value) {
      
      locationsStartIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * locations_start_index along with locations_length refers to to a slice of locations in Profile.location_indices.
     * </pre>
     *
     * <code>int32 locations_start_index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocationsStartIndex() {
      
      locationsStartIndex_ = 0;
      onChanged();
      return this;
    }

    private int locationsLength_ ;
    /**
     * <pre>
     * locations_length along with locations_start_index refers to a slice of locations in Profile.location_indices.
     * Supersedes location_index.
     * </pre>
     *
     * <code>int32 locations_length = 2;</code>
     * @return The locationsLength.
     */
    @java.lang.Override
    public int getLocationsLength() {
      return locationsLength_;
    }
    /**
     * <pre>
     * locations_length along with locations_start_index refers to a slice of locations in Profile.location_indices.
     * Supersedes location_index.
     * </pre>
     *
     * <code>int32 locations_length = 2;</code>
     * @param value The locationsLength to set.
     * @return This builder for chaining.
     */
    public Builder setLocationsLength(int value) {
      
      locationsLength_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * locations_length along with locations_start_index refers to a slice of locations in Profile.location_indices.
     * Supersedes location_index.
     * </pre>
     *
     * <code>int32 locations_length = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocationsLength() {
      
      locationsLength_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList value_ = emptyLongList();
    private void ensureValueIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        value_ = mutableCopy(value_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @return A list containing the value.
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(value_) : value_;
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @return The count of value.
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @param index The index of the element to return.
     * @return The value at the given index.
     */
    public long getValue(int index) {
      return value_.getLong(index);
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @param index The index to set the value at.
     * @param value The value to set.
     * @return This builder for chaining.
     */
    public Builder setValue(
        int index, long value) {
      ensureValueIsMutable();
      value_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @param value The value to add.
     * @return This builder for chaining.
     */
    public Builder addValue(long value) {
      ensureValueIsMutable();
      value_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @param values The value to add.
     * @return This builder for chaining.
     */
    public Builder addAllValue(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureValueIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, value_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type and unit of each value is defined by the corresponding
     * entry in Profile.sample_type. All samples must have the same
     * number of values, the same as the length of Profile.sample_type.
     * When aggregating multiple samples into a single sample, the
     * result has a list of values that is the element-wise sum of the
     * lists of the originals.
     * </pre>
     *
     * <code>repeated int64 value = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearValue() {
      value_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList attributeIndices_ = emptyIntList();
    private void ensureAttributeIndicesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        attributeIndices_ = mutableCopy(attributeIndices_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @return A list containing the attributeIndices.
     */
    public java.util.List<java.lang.Integer>
        getAttributeIndicesList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(attributeIndices_) : attributeIndices_;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @return The count of attributeIndices.
     */
    public int getAttributeIndicesCount() {
      return attributeIndices_.size();
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @param index The index of the element to return.
     * @return The attributeIndices at the given index.
     */
    public int getAttributeIndices(int index) {
      return attributeIndices_.getInt(index);
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @param index The index to set the value at.
     * @param value The attributeIndices to set.
     * @return This builder for chaining.
     */
    public Builder setAttributeIndices(
        int index, int value) {
      ensureAttributeIndicesIsMutable();
      attributeIndices_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @param value The attributeIndices to add.
     * @return This builder for chaining.
     */
    public Builder addAttributeIndices(int value) {
      ensureAttributeIndicesIsMutable();
      attributeIndices_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @param values The attributeIndices to add.
     * @return This builder for chaining.
     */
    public Builder addAllAttributeIndices(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAttributeIndicesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, attributeIndices_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttributeIndices() {
      attributeIndices_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int linkIndex_ ;
    /**
     * <pre>
     * Reference to link in ProfilesDictionary.link_table. [optional]
     * </pre>
     *
     * <code>optional int32 link_index = 5;</code>
     * @return Whether the linkIndex field is set.
     */
    @java.lang.Override
    public boolean hasLinkIndex() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Reference to link in ProfilesDictionary.link_table. [optional]
     * </pre>
     *
     * <code>optional int32 link_index = 5;</code>
     * @return The linkIndex.
     */
    @java.lang.Override
    public int getLinkIndex() {
      return linkIndex_;
    }
    /**
     * <pre>
     * Reference to link in ProfilesDictionary.link_table. [optional]
     * </pre>
     *
     * <code>optional int32 link_index = 5;</code>
     * @param value The linkIndex to set.
     * @return This builder for chaining.
     */
    public Builder setLinkIndex(int value) {
      bitField0_ |= 0x00000004;
      linkIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to link in ProfilesDictionary.link_table. [optional]
     * </pre>
     *
     * <code>optional int32 link_index = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLinkIndex() {
      bitField0_ = (bitField0_ & ~0x00000004);
      linkIndex_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList timestampsUnixNano_ = emptyLongList();
    private void ensureTimestampsUnixNanoIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        timestampsUnixNano_ = mutableCopy(timestampsUnixNano_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @return A list containing the timestampsUnixNano.
     */
    public java.util.List<java.lang.Long>
        getTimestampsUnixNanoList() {
      return ((bitField0_ & 0x00000008) != 0) ?
               java.util.Collections.unmodifiableList(timestampsUnixNano_) : timestampsUnixNano_;
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @return The count of timestampsUnixNano.
     */
    public int getTimestampsUnixNanoCount() {
      return timestampsUnixNano_.size();
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @param index The index of the element to return.
     * @return The timestampsUnixNano at the given index.
     */
    public long getTimestampsUnixNano(int index) {
      return timestampsUnixNano_.getLong(index);
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @param index The index to set the value at.
     * @param value The timestampsUnixNano to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampsUnixNano(
        int index, long value) {
      ensureTimestampsUnixNanoIsMutable();
      timestampsUnixNano_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @param value The timestampsUnixNano to add.
     * @return This builder for chaining.
     */
    public Builder addTimestampsUnixNano(long value) {
      ensureTimestampsUnixNanoIsMutable();
      timestampsUnixNano_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @param values The timestampsUnixNano to add.
     * @return This builder for chaining.
     */
    public Builder addAllTimestampsUnixNano(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureTimestampsUnixNanoIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, timestampsUnixNano_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
     * to fall within the Profile's time range. [optional]
     * </pre>
     *
     * <code>repeated uint64 timestamps_unix_nano = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampsUnixNano() {
      timestampsUnixNano_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opentelemetry.proto.profiles.v1development.Sample)
  }

  // @@protoc_insertion_point(class_scope:opentelemetry.proto.profiles.v1development.Sample)
  private static final io.opentelemetry.proto.profiles.v1development.Sample DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opentelemetry.proto.profiles.v1development.Sample();
  }

  public static io.opentelemetry.proto.profiles.v1development.Sample getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Sample>
      PARSER = new com.google.protobuf.AbstractParser<Sample>() {
    @java.lang.Override
    public Sample parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Sample(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Sample> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Sample> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opentelemetry.proto.profiles.v1development.Sample getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


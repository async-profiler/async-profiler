// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/profiles/v1development/profiles.proto

package io.opentelemetry.proto.profiles.v1development;

/**
 * <pre>
 * Describes function and line table debug information.
 * </pre>
 *
 * Protobuf type {@code opentelemetry.proto.profiles.v1development.Location}
 */
public final class Location extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opentelemetry.proto.profiles.v1development.Location)
    LocationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Location.newBuilder() to construct.
  private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Location() {
    line_ = java.util.Collections.emptyList();
    attributeIndices_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Location();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Location_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Location_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opentelemetry.proto.profiles.v1development.Location.class, io.opentelemetry.proto.profiles.v1development.Location.Builder.class);
  }

  private int bitField0_;
  public static final int MAPPING_INDEX_FIELD_NUMBER = 1;
  private int mappingIndex_ = 0;
  /**
   * <pre>
   * Reference to mapping in ProfilesDictionary.mapping_table.
   * It can be unset if the mapping is unknown or not applicable for
   * this profile type.
   * </pre>
   *
   * <code>optional int32 mapping_index = 1;</code>
   * @return Whether the mappingIndex field is set.
   */
  @java.lang.Override
  public boolean hasMappingIndex() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Reference to mapping in ProfilesDictionary.mapping_table.
   * It can be unset if the mapping is unknown or not applicable for
   * this profile type.
   * </pre>
   *
   * <code>optional int32 mapping_index = 1;</code>
   * @return The mappingIndex.
   */
  @java.lang.Override
  public int getMappingIndex() {
    return mappingIndex_;
  }

  public static final int ADDRESS_FIELD_NUMBER = 2;
  private long address_ = 0L;
  /**
   * <pre>
   * The instruction address for this location, if available.  It
   * should be within [Mapping.memory_start...Mapping.memory_limit]
   * for the corresponding mapping. A non-leaf address may be in the
   * middle of a call instruction. It is up to display tools to find
   * the beginning of the instruction if necessary.
   * </pre>
   *
   * <code>uint64 address = 2;</code>
   * @return The address.
   */
  @java.lang.Override
  public long getAddress() {
    return address_;
  }

  public static final int LINE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<io.opentelemetry.proto.profiles.v1development.Line> line_;
  /**
   * <pre>
   * Multiple line indicates this location has inlined functions,
   * where the last entry represents the caller into which the
   * preceding entries were inlined.
   *
   * E.g., if memcpy() is inlined into printf:
   *    line[0].function_name == "memcpy"
   *    line[1].function_name == "printf"
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.opentelemetry.proto.profiles.v1development.Line> getLineList() {
    return line_;
  }
  /**
   * <pre>
   * Multiple line indicates this location has inlined functions,
   * where the last entry represents the caller into which the
   * preceding entries were inlined.
   *
   * E.g., if memcpy() is inlined into printf:
   *    line[0].function_name == "memcpy"
   *    line[1].function_name == "printf"
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.opentelemetry.proto.profiles.v1development.LineOrBuilder> 
      getLineOrBuilderList() {
    return line_;
  }
  /**
   * <pre>
   * Multiple line indicates this location has inlined functions,
   * where the last entry represents the caller into which the
   * preceding entries were inlined.
   *
   * E.g., if memcpy() is inlined into printf:
   *    line[0].function_name == "memcpy"
   *    line[1].function_name == "printf"
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
   */
  @java.lang.Override
  public int getLineCount() {
    return line_.size();
  }
  /**
   * <pre>
   * Multiple line indicates this location has inlined functions,
   * where the last entry represents the caller into which the
   * preceding entries were inlined.
   *
   * E.g., if memcpy() is inlined into printf:
   *    line[0].function_name == "memcpy"
   *    line[1].function_name == "printf"
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.profiles.v1development.Line getLine(int index) {
    return line_.get(index);
  }
  /**
   * <pre>
   * Multiple line indicates this location has inlined functions,
   * where the last entry represents the caller into which the
   * preceding entries were inlined.
   *
   * E.g., if memcpy() is inlined into printf:
   *    line[0].function_name == "memcpy"
   *    line[1].function_name == "printf"
   * </pre>
   *
   * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.profiles.v1development.LineOrBuilder getLineOrBuilder(
      int index) {
    return line_.get(index);
  }

  public static final int IS_FOLDED_FIELD_NUMBER = 4;
  private boolean isFolded_ = false;
  /**
   * <pre>
   * Provides an indication that multiple symbols map to this location's
   * address, for example due to identical code folding by the linker. In that
   * case the line information above represents one of the multiple
   * symbols. This field must be recomputed when the symbolization state of the
   * profile changes.
   * </pre>
   *
   * <code>bool is_folded = 4;</code>
   * @return The isFolded.
   */
  @java.lang.Override
  public boolean getIsFolded() {
    return isFolded_;
  }

  public static final int ATTRIBUTE_INDICES_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList attributeIndices_ =
      emptyIntList();
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 5;</code>
   * @return A list containing the attributeIndices.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getAttributeIndicesList() {
    return attributeIndices_;
  }
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 5;</code>
   * @return The count of attributeIndices.
   */
  public int getAttributeIndicesCount() {
    return attributeIndices_.size();
  }
  /**
   * <pre>
   * References to attributes in ProfilesDictionary.attribute_table. [optional]
   * </pre>
   *
   * <code>repeated int32 attribute_indices = 5;</code>
   * @param index The index of the element to return.
   * @return The attributeIndices at the given index.
   */
  public int getAttributeIndices(int index) {
    return attributeIndices_.getInt(index);
  }
  private int attributeIndicesMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, mappingIndex_);
    }
    if (address_ != 0L) {
      output.writeUInt64(2, address_);
    }
    for (int i = 0; i < line_.size(); i++) {
      output.writeMessage(3, line_.get(i));
    }
    if (isFolded_ != false) {
      output.writeBool(4, isFolded_);
    }
    if (getAttributeIndicesList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(attributeIndicesMemoizedSerializedSize);
    }
    for (int i = 0; i < attributeIndices_.size(); i++) {
      output.writeInt32NoTag(attributeIndices_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, mappingIndex_);
    }
    if (address_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, address_);
    }
    for (int i = 0; i < line_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, line_.get(i));
    }
    if (isFolded_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, isFolded_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < attributeIndices_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(attributeIndices_.getInt(i));
      }
      size += dataSize;
      if (!getAttributeIndicesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      attributeIndicesMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opentelemetry.proto.profiles.v1development.Location)) {
      return super.equals(obj);
    }
    io.opentelemetry.proto.profiles.v1development.Location other = (io.opentelemetry.proto.profiles.v1development.Location) obj;

    if (hasMappingIndex() != other.hasMappingIndex()) return false;
    if (hasMappingIndex()) {
      if (getMappingIndex()
          != other.getMappingIndex()) return false;
    }
    if (getAddress()
        != other.getAddress()) return false;
    if (!getLineList()
        .equals(other.getLineList())) return false;
    if (getIsFolded()
        != other.getIsFolded()) return false;
    if (!getAttributeIndicesList()
        .equals(other.getAttributeIndicesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMappingIndex()) {
      hash = (37 * hash) + MAPPING_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getMappingIndex();
    }
    hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAddress());
    if (getLineCount() > 0) {
      hash = (37 * hash) + LINE_FIELD_NUMBER;
      hash = (53 * hash) + getLineList().hashCode();
    }
    hash = (37 * hash) + IS_FOLDED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsFolded());
    if (getAttributeIndicesCount() > 0) {
      hash = (37 * hash) + ATTRIBUTE_INDICES_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeIndicesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.opentelemetry.proto.profiles.v1development.Location parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.opentelemetry.proto.profiles.v1development.Location parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.profiles.v1development.Location parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opentelemetry.proto.profiles.v1development.Location prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes function and line table debug information.
   * </pre>
   *
   * Protobuf type {@code opentelemetry.proto.profiles.v1development.Location}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opentelemetry.proto.profiles.v1development.Location)
      io.opentelemetry.proto.profiles.v1development.LocationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Location_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opentelemetry.proto.profiles.v1development.Location.class, io.opentelemetry.proto.profiles.v1development.Location.Builder.class);
    }

    // Construct using io.opentelemetry.proto.profiles.v1development.Location.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      mappingIndex_ = 0;
      address_ = 0L;
      if (lineBuilder_ == null) {
        line_ = java.util.Collections.emptyList();
      } else {
        line_ = null;
        lineBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      isFolded_ = false;
      attributeIndices_ = emptyIntList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opentelemetry.proto.profiles.v1development.ProfilesProto.internal_static_opentelemetry_proto_profiles_v1development_Location_descriptor;
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Location getDefaultInstanceForType() {
      return io.opentelemetry.proto.profiles.v1development.Location.getDefaultInstance();
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Location build() {
      io.opentelemetry.proto.profiles.v1development.Location result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opentelemetry.proto.profiles.v1development.Location buildPartial() {
      io.opentelemetry.proto.profiles.v1development.Location result = new io.opentelemetry.proto.profiles.v1development.Location(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.opentelemetry.proto.profiles.v1development.Location result) {
      if (lineBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          line_ = java.util.Collections.unmodifiableList(line_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.line_ = line_;
      } else {
        result.line_ = lineBuilder_.build();
      }
    }

    private void buildPartial0(io.opentelemetry.proto.profiles.v1development.Location result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.mappingIndex_ = mappingIndex_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.address_ = address_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.isFolded_ = isFolded_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        attributeIndices_.makeImmutable();
        result.attributeIndices_ = attributeIndices_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opentelemetry.proto.profiles.v1development.Location) {
        return mergeFrom((io.opentelemetry.proto.profiles.v1development.Location)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opentelemetry.proto.profiles.v1development.Location other) {
      if (other == io.opentelemetry.proto.profiles.v1development.Location.getDefaultInstance()) return this;
      if (other.hasMappingIndex()) {
        setMappingIndex(other.getMappingIndex());
      }
      if (other.getAddress() != 0L) {
        setAddress(other.getAddress());
      }
      if (lineBuilder_ == null) {
        if (!other.line_.isEmpty()) {
          if (line_.isEmpty()) {
            line_ = other.line_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLineIsMutable();
            line_.addAll(other.line_);
          }
          onChanged();
        }
      } else {
        if (!other.line_.isEmpty()) {
          if (lineBuilder_.isEmpty()) {
            lineBuilder_.dispose();
            lineBuilder_ = null;
            line_ = other.line_;
            bitField0_ = (bitField0_ & ~0x00000004);
            lineBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLineFieldBuilder() : null;
          } else {
            lineBuilder_.addAllMessages(other.line_);
          }
        }
      }
      if (other.getIsFolded() != false) {
        setIsFolded(other.getIsFolded());
      }
      if (!other.attributeIndices_.isEmpty()) {
        if (attributeIndices_.isEmpty()) {
          attributeIndices_ = other.attributeIndices_;
          attributeIndices_.makeImmutable();
          bitField0_ |= 0x00000010;
        } else {
          ensureAttributeIndicesIsMutable();
          attributeIndices_.addAll(other.attributeIndices_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              mappingIndex_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              address_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              io.opentelemetry.proto.profiles.v1development.Line m =
                  input.readMessage(
                      io.opentelemetry.proto.profiles.v1development.Line.parser(),
                      extensionRegistry);
              if (lineBuilder_ == null) {
                ensureLineIsMutable();
                line_.add(m);
              } else {
                lineBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 32: {
              isFolded_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              int v = input.readInt32();
              ensureAttributeIndicesIsMutable();
              attributeIndices_.addInt(v);
              break;
            } // case 40
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureAttributeIndicesIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                attributeIndices_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int mappingIndex_ ;
    /**
     * <pre>
     * Reference to mapping in ProfilesDictionary.mapping_table.
     * It can be unset if the mapping is unknown or not applicable for
     * this profile type.
     * </pre>
     *
     * <code>optional int32 mapping_index = 1;</code>
     * @return Whether the mappingIndex field is set.
     */
    @java.lang.Override
    public boolean hasMappingIndex() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Reference to mapping in ProfilesDictionary.mapping_table.
     * It can be unset if the mapping is unknown or not applicable for
     * this profile type.
     * </pre>
     *
     * <code>optional int32 mapping_index = 1;</code>
     * @return The mappingIndex.
     */
    @java.lang.Override
    public int getMappingIndex() {
      return mappingIndex_;
    }
    /**
     * <pre>
     * Reference to mapping in ProfilesDictionary.mapping_table.
     * It can be unset if the mapping is unknown or not applicable for
     * this profile type.
     * </pre>
     *
     * <code>optional int32 mapping_index = 1;</code>
     * @param value The mappingIndex to set.
     * @return This builder for chaining.
     */
    public Builder setMappingIndex(int value) {

      mappingIndex_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to mapping in ProfilesDictionary.mapping_table.
     * It can be unset if the mapping is unknown or not applicable for
     * this profile type.
     * </pre>
     *
     * <code>optional int32 mapping_index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMappingIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mappingIndex_ = 0;
      onChanged();
      return this;
    }

    private long address_ ;
    /**
     * <pre>
     * The instruction address for this location, if available.  It
     * should be within [Mapping.memory_start...Mapping.memory_limit]
     * for the corresponding mapping. A non-leaf address may be in the
     * middle of a call instruction. It is up to display tools to find
     * the beginning of the instruction if necessary.
     * </pre>
     *
     * <code>uint64 address = 2;</code>
     * @return The address.
     */
    @java.lang.Override
    public long getAddress() {
      return address_;
    }
    /**
     * <pre>
     * The instruction address for this location, if available.  It
     * should be within [Mapping.memory_start...Mapping.memory_limit]
     * for the corresponding mapping. A non-leaf address may be in the
     * middle of a call instruction. It is up to display tools to find
     * the beginning of the instruction if necessary.
     * </pre>
     *
     * <code>uint64 address = 2;</code>
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(long value) {

      address_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The instruction address for this location, if available.  It
     * should be within [Mapping.memory_start...Mapping.memory_limit]
     * for the corresponding mapping. A non-leaf address may be in the
     * middle of a call instruction. It is up to display tools to find
     * the beginning of the instruction if necessary.
     * </pre>
     *
     * <code>uint64 address = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      bitField0_ = (bitField0_ & ~0x00000002);
      address_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<io.opentelemetry.proto.profiles.v1development.Line> line_ =
      java.util.Collections.emptyList();
    private void ensureLineIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        line_ = new java.util.ArrayList<io.opentelemetry.proto.profiles.v1development.Line>(line_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opentelemetry.proto.profiles.v1development.Line, io.opentelemetry.proto.profiles.v1development.Line.Builder, io.opentelemetry.proto.profiles.v1development.LineOrBuilder> lineBuilder_;

    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public java.util.List<io.opentelemetry.proto.profiles.v1development.Line> getLineList() {
      if (lineBuilder_ == null) {
        return java.util.Collections.unmodifiableList(line_);
      } else {
        return lineBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public int getLineCount() {
      if (lineBuilder_ == null) {
        return line_.size();
      } else {
        return lineBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public io.opentelemetry.proto.profiles.v1development.Line getLine(int index) {
      if (lineBuilder_ == null) {
        return line_.get(index);
      } else {
        return lineBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder setLine(
        int index, io.opentelemetry.proto.profiles.v1development.Line value) {
      if (lineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLineIsMutable();
        line_.set(index, value);
        onChanged();
      } else {
        lineBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder setLine(
        int index, io.opentelemetry.proto.profiles.v1development.Line.Builder builderForValue) {
      if (lineBuilder_ == null) {
        ensureLineIsMutable();
        line_.set(index, builderForValue.build());
        onChanged();
      } else {
        lineBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder addLine(io.opentelemetry.proto.profiles.v1development.Line value) {
      if (lineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLineIsMutable();
        line_.add(value);
        onChanged();
      } else {
        lineBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder addLine(
        int index, io.opentelemetry.proto.profiles.v1development.Line value) {
      if (lineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLineIsMutable();
        line_.add(index, value);
        onChanged();
      } else {
        lineBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder addLine(
        io.opentelemetry.proto.profiles.v1development.Line.Builder builderForValue) {
      if (lineBuilder_ == null) {
        ensureLineIsMutable();
        line_.add(builderForValue.build());
        onChanged();
      } else {
        lineBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder addLine(
        int index, io.opentelemetry.proto.profiles.v1development.Line.Builder builderForValue) {
      if (lineBuilder_ == null) {
        ensureLineIsMutable();
        line_.add(index, builderForValue.build());
        onChanged();
      } else {
        lineBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder addAllLine(
        java.lang.Iterable<? extends io.opentelemetry.proto.profiles.v1development.Line> values) {
      if (lineBuilder_ == null) {
        ensureLineIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, line_);
        onChanged();
      } else {
        lineBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder clearLine() {
      if (lineBuilder_ == null) {
        line_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        lineBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public Builder removeLine(int index) {
      if (lineBuilder_ == null) {
        ensureLineIsMutable();
        line_.remove(index);
        onChanged();
      } else {
        lineBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public io.opentelemetry.proto.profiles.v1development.Line.Builder getLineBuilder(
        int index) {
      return getLineFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public io.opentelemetry.proto.profiles.v1development.LineOrBuilder getLineOrBuilder(
        int index) {
      if (lineBuilder_ == null) {
        return line_.get(index);  } else {
        return lineBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public java.util.List<? extends io.opentelemetry.proto.profiles.v1development.LineOrBuilder> 
         getLineOrBuilderList() {
      if (lineBuilder_ != null) {
        return lineBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(line_);
      }
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public io.opentelemetry.proto.profiles.v1development.Line.Builder addLineBuilder() {
      return getLineFieldBuilder().addBuilder(
          io.opentelemetry.proto.profiles.v1development.Line.getDefaultInstance());
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public io.opentelemetry.proto.profiles.v1development.Line.Builder addLineBuilder(
        int index) {
      return getLineFieldBuilder().addBuilder(
          index, io.opentelemetry.proto.profiles.v1development.Line.getDefaultInstance());
    }
    /**
     * <pre>
     * Multiple line indicates this location has inlined functions,
     * where the last entry represents the caller into which the
     * preceding entries were inlined.
     *
     * E.g., if memcpy() is inlined into printf:
     *    line[0].function_name == "memcpy"
     *    line[1].function_name == "printf"
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.profiles.v1development.Line line = 3;</code>
     */
    public java.util.List<io.opentelemetry.proto.profiles.v1development.Line.Builder> 
         getLineBuilderList() {
      return getLineFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.opentelemetry.proto.profiles.v1development.Line, io.opentelemetry.proto.profiles.v1development.Line.Builder, io.opentelemetry.proto.profiles.v1development.LineOrBuilder> 
        getLineFieldBuilder() {
      if (lineBuilder_ == null) {
        lineBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.opentelemetry.proto.profiles.v1development.Line, io.opentelemetry.proto.profiles.v1development.Line.Builder, io.opentelemetry.proto.profiles.v1development.LineOrBuilder>(
                line_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        line_ = null;
      }
      return lineBuilder_;
    }

    private boolean isFolded_ ;
    /**
     * <pre>
     * Provides an indication that multiple symbols map to this location's
     * address, for example due to identical code folding by the linker. In that
     * case the line information above represents one of the multiple
     * symbols. This field must be recomputed when the symbolization state of the
     * profile changes.
     * </pre>
     *
     * <code>bool is_folded = 4;</code>
     * @return The isFolded.
     */
    @java.lang.Override
    public boolean getIsFolded() {
      return isFolded_;
    }
    /**
     * <pre>
     * Provides an indication that multiple symbols map to this location's
     * address, for example due to identical code folding by the linker. In that
     * case the line information above represents one of the multiple
     * symbols. This field must be recomputed when the symbolization state of the
     * profile changes.
     * </pre>
     *
     * <code>bool is_folded = 4;</code>
     * @param value The isFolded to set.
     * @return This builder for chaining.
     */
    public Builder setIsFolded(boolean value) {

      isFolded_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Provides an indication that multiple symbols map to this location's
     * address, for example due to identical code folding by the linker. In that
     * case the line information above represents one of the multiple
     * symbols. This field must be recomputed when the symbolization state of the
     * profile changes.
     * </pre>
     *
     * <code>bool is_folded = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsFolded() {
      bitField0_ = (bitField0_ & ~0x00000008);
      isFolded_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList attributeIndices_ = emptyIntList();
    private void ensureAttributeIndicesIsMutable() {
      if (!attributeIndices_.isModifiable()) {
        attributeIndices_ = makeMutableCopy(attributeIndices_);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @return A list containing the attributeIndices.
     */
    public java.util.List<java.lang.Integer>
        getAttributeIndicesList() {
      attributeIndices_.makeImmutable();
      return attributeIndices_;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @return The count of attributeIndices.
     */
    public int getAttributeIndicesCount() {
      return attributeIndices_.size();
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @param index The index of the element to return.
     * @return The attributeIndices at the given index.
     */
    public int getAttributeIndices(int index) {
      return attributeIndices_.getInt(index);
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @param index The index to set the value at.
     * @param value The attributeIndices to set.
     * @return This builder for chaining.
     */
    public Builder setAttributeIndices(
        int index, int value) {

      ensureAttributeIndicesIsMutable();
      attributeIndices_.setInt(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @param value The attributeIndices to add.
     * @return This builder for chaining.
     */
    public Builder addAttributeIndices(int value) {

      ensureAttributeIndicesIsMutable();
      attributeIndices_.addInt(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @param values The attributeIndices to add.
     * @return This builder for chaining.
     */
    public Builder addAllAttributeIndices(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAttributeIndicesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, attributeIndices_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * References to attributes in ProfilesDictionary.attribute_table. [optional]
     * </pre>
     *
     * <code>repeated int32 attribute_indices = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttributeIndices() {
      attributeIndices_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opentelemetry.proto.profiles.v1development.Location)
  }

  // @@protoc_insertion_point(class_scope:opentelemetry.proto.profiles.v1development.Location)
  private static final io.opentelemetry.proto.profiles.v1development.Location DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opentelemetry.proto.profiles.v1development.Location();
  }

  public static io.opentelemetry.proto.profiles.v1development.Location getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Location>
      PARSER = new com.google.protobuf.AbstractParser<Location>() {
    @java.lang.Override
    public Location parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Location> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Location> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opentelemetry.proto.profiles.v1development.Location getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

